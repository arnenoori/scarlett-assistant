datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  userId         Int      @id @default(autoincrement())
  email          String   @unique
  password       String
  createdAt      DateTime @default(now())
  preferences    UserPreference[]
  sharedData     SharedDataTracking[]
}

model Website {
  websiteId      Int      @id @default(autoincrement())
  url            String   @unique
  siteName       String?
  category       String?
  lastCrawled    DateTime?
  termsOfService TermsOfService[]
  sharedData     SharedDataTracking[]
}

model TermsOfService {
  tosId             Int      @id @default(autoincrement())
  website           Website  @relation(fields: [websiteId], references: [websiteId])
  websiteId         Int
  content           String
  simplifiedContent String
  versionIdentifier String?
  lastUpdated       DateTime @default(now())
  tosUrl            String?

  @@index([websiteId, lastUpdated])
}

model UserPreference {
  preferenceId    Int     @id @default(autoincrement())
  user            User    @relation(fields: [userId], references: [userId])
  userId          Int
  preferenceType  String
  preferenceValue String

  @@index([userId])
}

model SharedDataTracking {
  trackingId  Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [userId])
  userId      Int
  website     Website  @relation(fields: [websiteId], references: [websiteId])
  websiteId   Int
  dataShared  String
  dateShared  DateTime @default(now())

  @@index([userId, websiteId])
}